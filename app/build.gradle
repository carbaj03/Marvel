apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file('gradle/generated-kotlin-sources.gradle')

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.acv.marvel"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "API_URL_MARVEL", '"https://api.myjson.com/"'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
kapt {
    generateStubs = true
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation rootProject.ext.dependencies.appCompatv7
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.constraint

    implementation rootProject.ext.dependencies.retrofit
    implementation rootProject.ext.dependencies.retrofitJson

    implementation rootProject.ext.dependencies.okHttp
    implementation rootProject.ext.dependencies.logginInterceptor

    kapt rootProject.ext.dependencies.daggerCompiler
    kapt rootProject.ext.dependencies.daggerAndroidCompiler
    implementation rootProject.ext.dependencies.daggerAndroid
    implementation rootProject.ext.dependencies.daggerAndroidSupport
    implementation rootProject.ext.dependencies.dagger

    implementation rootProject.ext.dependencies.picasso

    implementation 'io.arrow-kt:arrow-core:0.6.0'
    implementation 'io.arrow-kt:arrow-typeclasses:0.6.0'
    implementation 'io.arrow-kt:arrow-instances:0.6.0'
    implementation 'io.arrow-kt:arrow-syntax:0.6.0'
    implementation 'io.arrow-kt:arrow-effects:0.6.0'
    kapt 'io.arrow-kt:arrow-annotations-processor:0.6.0'


    implementation 'co.metalab.asyncawait:asyncawait:1.0.0'

    testImplementation rootProject.ext.testDependencies.junit
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation rootProject.ext.testDependencies.mockwebserver
    testImplementation rootProject.ext.testDependencies.mockitoKotlin
    testImplementation 'commons-io:commons-io:2.4'
    testImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.4'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.4'

    androidTestImplementation 'org.mockito:mockito-android:2.9.0'
    androidTestImplementation 'org.mockito:mockito-core:2.10.0'
    androidTestImplementation ('com.android.support.test.espresso:espresso-core:3.0.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}


tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}